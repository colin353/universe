syntax = "proto3";

message File {
  string filename = 1;

  // Whether the file was found or not.
  bool found = 2;
  bool deleted = 3;

  // Whether this file actually represents a directory.
  bool directory = 4;

  // The unix file attributes.
  uint64 mtime = 5;
  uint64 atime = 6;
  uint64 ctime = 7;
  uint64 crtime = 8;
  uint64 nlink = 9;
  uint64 rdev = 10;
  uint64 flags = 11;
  uint64 perm = 12;

  // File contents.
  bytes contents = 13;

  // If this file is branched from another file, the path
  // of the other file.
  bool is_branched = 14;
  string branched_from = 15;

  uint64 change_id = 16;
  uint64 snapshot_id = 17;

  uint64 size = 18;

  bool reverted = 19;
}

message FileHistory {
  string filename = 1;
  repeated File snapshots = 2;
}

enum ChangeStatus {
  UNKNOWN = 0;
  PENDING = 1;
  SUBMITTED = 2;
}

message Change {
  // The ID of this change on the remote server.
  uint64 id = 1;
  uint64 submitted_id = 2;

  // The ID of this change on the remote client.
  uint64 remote_id = 3;

  // The change ID this is based on. If zero, it means HEAD.
  uint64 based_id = 4;
  uint64 based_index = 5;
  bool is_based_locally = 6;

  bool found = 7;

  repeated FileHistory changes = 8;

  string author = 9;
  string description = 10;
  ChangeStatus status = 11;
  repeated string reviewers = 12;
  uint64 last_modified_timestamp = 13;
  string friendly_name = 14;

  repeated File staged_files = 15;

  string task_id = 16;
}

message SnapshotLogEntry {
  bool is_rebase = 1;

  // The ID and index of the change on the remote server that this is based on,
  // in case that changed with a rebase.
  uint64 based_id = 2;
  uint64 based_index = 3;

  // The index this snapshot is for (e.g. timestamp).
  uint64 index = 4;
}

// weld-server

message FileIdentifier {
  uint64 id = 1;
  string filename = 2;
  uint64 index = 3;
}

message ListFilesResponse { repeated File files = 1; }

enum SubmitStatus {
  ERROR = 0;
  OK = 1;
  REQUIRES_SYNC = 2;
}

message SubmitResponse {
  uint64 id = 1;
  SubmitStatus status = 2;
}
message SnapshotResponse {
  uint64 change_id = 1;
  uint64 snapshot_id = 2;
}
message GetLatestChangeRequest {}

message GetSubmittedChangesRequest {
  uint64 starting_id = 1;
  uint64 ending_id = 2;
  uint64 limit = 3;
}

message GetSubmittedChangesResponse { repeated Change changes = 1; }

service WeldService {
  rpc ListFiles(FileIdentifier) returns (ListFilesResponse);
  rpc Read(FileIdentifier) returns (File);
  rpc ReadAttrs(FileIdentifier) returns (File);
  rpc Submit(Change) returns (SubmitResponse);
  rpc Snapshot(Change) returns (SnapshotResponse);
  rpc GetChange(Change) returns (Change);
  rpc ListChanges(ListChangesRequest) returns (ListChangesResponse);
  rpc GetLatestChange(GetLatestChangeRequest) returns (Change);
  rpc GetSubmittedChanges(GetSubmittedChangesRequest)
      returns (GetSubmittedChangesResponse);
  rpc RegisterTaskForChange(Change) returns (Change);
  rpc GetPatch(Change) returns (Patch);
}

// weld local client

message DeleteResponse {}
message WriteResponse {}
message WriteRequest {
  uint64 id = 1;
  File file = 2;
}
message ListChangesRequest {}
message ListChangesResponse { repeated Change changes = 1; }

message LookupFriendlyNameRequest { string friendly_name = 1; }
message LookupFriendlyNameResponse { uint64 id = 1; }

message Patch { string patch = 1; }

message SyncRequest {
  Change change = 1;
  repeated File conflicted_files = 2;
}
message SyncResponse {
  repeated File conflicted_files = 1;
  uint64 index = 2;
}

message GetChangeRequest {
  Change change = 1;
  bool filled = 2;
}

message RunBuildQueryRequest { uint64 change_id = 1; }
message RunBuildQueryResponse {
  bool success = 1;
  repeated string targets = 2;
  repeated string dependencies = 3;
}

message RunBuildRequest {
  uint64 change_id = 1;
  string target = 2;
}
message RunBuildResponse {
  bool success = 1;
  bool build_success = 2;
  string build_output = 3;
  bool test_success = 4;
  string test_output = 5;
}

message ApplyPatchRequest { uint64 change_id = 1; }
message ApplyPatchResponse {
  bool success = 1;
  string reason = 2;
}

service WeldLocalService {
  rpc GetChange(GetChangeRequest) returns (Change);
  rpc MakeChange(Change) returns (Change);
  rpc ListFiles(FileIdentifier) returns (ListFilesResponse);
  rpc Read(FileIdentifier) returns (File);
  rpc Write(WriteRequest) returns (WriteResponse);
  rpc Delete(FileIdentifier) returns (DeleteResponse);
  rpc ListChanges(ListChangesRequest) returns (ListChangesResponse);
  rpc Snapshot(Change) returns (SnapshotResponse);
  rpc Submit(Change) returns (SubmitResponse);
  rpc LookupFriendlyName(LookupFriendlyNameRequest)
      returns (LookupFriendlyNameResponse);
  rpc GetPatch(Change) returns (Patch);
  rpc Sync(SyncRequest) returns (SyncResponse);
  rpc RunBuild(RunBuildRequest) returns (RunBuildResponse);
  rpc RunBuildQuery(RunBuildQueryRequest) returns (RunBuildQueryResponse);
  rpc ApplyPatch(ApplyPatchRequest) returns (ApplyPatchResponse);
}
