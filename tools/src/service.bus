enum DiffKind {
    Unknown = 0
    Added = 1
    Modified = 2
    Removed = 3
    Reverted = 4
}

message FileDiff {
    path: string = 0
    kind: DiffKind = 1
    is_dir: bool = 2
    differences: repeated ByteDiff = 3
}

enum CompressionKind {
    None = 0
    LZ4 = 1
}

message ByteDiff {
    start: u32 = 0
    end: u32 = 1
    kind: DiffKind = 2
    data: bytes = 3
    compression: CompressionKind = 4
}

message Basis {
    host: string = 0
    owner: string = 1
    name: string = 2
    change: u64 = 3
    index: u64 = 4
}

message File {
    is_dir: bool = 0
    sha: bytes = 1
    mtime: u64 = 2
    length: u64 = 3
}

message SubmitRequest {
    token: string = 0
    repo_owner: string = 1
    repo_name: string = 2
    change_id: u64 = 3
    snapshot_timestamp: u64 = 4
}

message SubmitResponse {
    failed: bool = 0
    error_message: string = 1
    index: u64 = 2
}

message CreateRequest {
    token: string = 0
    name: string = 1
}

message CreateResponse {
    failed: bool = 0
    error_message: string = 1
}

message GetRepositoryRequest {
    token: string = 0
    owner: string = 1
    name: string = 2
}

message Repository {
    owner: string = 0
    name: string = 1
}

message GetRepositoryResponse {
    failed: bool = 0
    error_message: string = 1

    // Info about the repository
    index: u64 = 2
}

message GetMetadataRequest {
    token: string = 0
    basis: Basis = 1
}

message GetMetadataResponse {
    failed: bool = 0
    error_message: string = 1
    data: bytes = 2
}

message GetBlobsByPathRequest {
    token: string = 0
    basis: Basis = 1
    paths: repeated string = 2
}

message GetBlobsByPathResponse {
    failed: bool = 0
    error_message: string = 1
    blobs: repeated Blob = 2
}

message GetBlobsRequest {
    token: string = 0
    shas: repeated bytes = 1
}

message Blob {
    sha: bytes = 0
    data: bytes = 1
}

message GetBlobsResponse {
    failed: bool = 0
    error_message: string = 1
    blobs: repeated Blob = 2
}

enum ChangeStatus {
    Unknown = 0
    Pending = 1
    Submitted = 2
    Archived = 3
}

message Change {
    id: u64 = 0
    submitted_id: u64 = 1
    description: string = 2
    status: ChangeStatus = 3
    repo_name: string = 4
    repo_owner: string = 5
    owner: string = 6

    // the ID of the change before being submitted
    original_id: u64 = 7
}

message UpdateChangeRequest {
    token: string = 0
    change: Change = 1
    snapshot: Snapshot = 2
}

message UpdateChangeResponse {
    failed: bool = 0
    error_message: string = 1
    id: u64 = 2
    url: string = 3
}

message ListChangesRequest {
    token: string = 0
    owner: string = 1
    repo_name: string = 2
    repo_owner: string = 3
    status: ChangeStatus = 4
    starting_from: string = 5
    limit: u64 = 6
}

message ListChangesResponse {
    failed: bool = 0
    error_message: string = 1
    changes: repeated Change = 2
}

message GetChangeRequest {
    token: string = 0
    repo_owner: string = 1
    repo_name: string = 2
    id: u64 = 3
}

message GetChangeResponse {
    failed: bool = 0
    error_message: string = 1
    change: Change = 2
    latest_snapshot: Snapshot = 3
}

service SrcServer {
    rpc create(CreateRequest) -> CreateResponse
    rpc get_repository(GetRepositoryRequest) -> GetRepositoryResponse
    rpc submit(SubmitRequest) -> SubmitResponse
    rpc get_metadata(GetMetadataRequest) -> GetMetadataResponse
    rpc get_blobs(GetBlobsRequest) -> GetBlobsResponse
    rpc update_change(UpdateChangeRequest) -> UpdateChangeResponse
    rpc list_changes(ListChangesRequest) -> ListChangesResponse
    rpc get_change(GetChangeRequest) -> GetChangeResponse
    rpc get_blobs_by_path(GetBlobsByPathRequest) -> GetBlobsByPathResponse
}

message CheckoutResponse {
    failed: bool = 0
    error_message: string = 1

    dir: string = 2
    index: u64 = 3
}

message DiffRequest {
    dir: string = 0
    alias: string = 1
}

message DiffResponse {
    failed: bool = 0
    error_message: string = 1
    basis: Basis = 2
    files: repeated FileDiff = 3
}

message SnapshotRequest {
    dir: string = 0
    alias: string = 1
    message: string = 2
    skip_if_no_changes: bool = 3
}

message SnapshotResponse {
    failed: bool = 0
    error_message: string = 1
    timestamp: u64 = 2
    skipped: bool = 3
}

message Snapshot {
    timestamp: u64 = 0
    basis: Basis = 1
    files: repeated FileDiff = 2
    message: string = 3
}

message LinkRequest {
    host: string = 0
    owner: string = 1
    name: string = 2
    alias: string = 3
}

message LinkResponse {
    failed: bool = 0
    error_message: string = 1
}

message Space {
    directory: string = 0
    basis: Basis = 1
    change_id: u64 = 2
}

message CheckoutRequest {
    dir: string = 0
    alias: string = 1
    basis: Basis = 2
}
