enum DiffKind {
    Unknown = 0
    Added = 1
    Modified = 2
    Removed = 3
    Reverted = 4
}

message FileDiff {
    path: string = 0
    kind: DiffKind = 1
    is_dir: bool = 2
    differences: repeated ByteDiff = 3
}

enum CompressionKind {
    None = 0
    LZ4 = 1
}

message ByteDiff {
    start: u32 = 0
    end: u32 = 1
    kind: DiffKind = 2
    data: bytes = 3
    compression: CompressionKind = 4
}

message Basis {
    host: string = 0
    owner: string = 1
    name: string = 2
    change: u64 = 3
    index: u64 = 4
}

message Change {
    directory: string = 0
    basis: Basis = 1
}

message File {
    is_dir: bool = 0
    sha: bytes = 1
    mtime: u64 = 2
    length: u64 = 3
}

message SubmitRequest {
    token: string = 0
    basis: Basis = 1
    files: repeated FileDiff = 2
}

message SubmitResponse {
    failed: bool = 0
    error_message: string = 1
    index: u64 = 2
}

message CreateRequest {
    token: string = 0
    name: string = 1
}

message CreateResponse {
    failed: bool = 0
    error_message: string = 1
}

message GetRepositoryRequest {
    token: string = 0
    owner: string = 1
    name: string = 2
}

message Repository {
    owner: string = 0
    name: string = 1
}

message GetRepositoryResponse {
    failed: bool = 0
    error_message: string = 1

    // Info about the repository
    index: u64 = 2
}

message GetMetadataRequest {
    token: string = 0
    basis: Basis = 1
}

message GetMetadataResponse {
    failed: bool = 0
    error_message: string = 1
    data: bytes = 2
}

message GetBlobsRequest {
    token: string = 0
    shas: repeated bytes = 1
}

message Blob {
    sha: bytes = 0
    data: bytes = 1
}

message GetBlobsResponse {
    failed: bool = 0
    error_message: string = 1
    blobs: repeated Blob = 2
}

service SrcServer {
    rpc create(CreateRequest) -> CreateResponse
    rpc get_repository(GetRepositoryRequest) -> GetRepositoryResponse
    rpc submit(SubmitRequest) -> SubmitResponse
    rpc get_metadata(GetMetadataRequest) -> GetMetadataResponse
    rpc get_blobs(GetBlobsRequest) -> GetBlobsResponse
}

message NewChangeRequest {
    dir: string = 0
    alias: string = 1
    basis: Basis = 2
}

message NewChangeResponse {
    failed: bool = 0
    error_message: string = 1

    dir: string = 2
    index: u64 = 3
}

message DiffRequest {
    dir: string = 0
    alias: string = 1
}

message DiffResponse {
    failed: bool = 0
    error_message: string = 1
    basis: Basis = 0
    files: repeated FileDiff = 1
}

message SnapshotRequest {
    dir: string = 0
    alias: string = 1
    message: string = 2
}

message SnapshotResponse {
    failed: bool = 0
    error_message: string = 1
    timestamp: u64 = 2
}

message Snapshot {
    timestamp: u64 = 0
    basis: Basis = 1
    files: repeated FileDiff = 2
    message: string = 3
}

message LinkRequest {
    host: string = 0
    owner: string = 1
    name: string = 2
    alias: string = 3
}

message LinkResponse {
    failed: bool = 0
    error_message: string = 1
}
